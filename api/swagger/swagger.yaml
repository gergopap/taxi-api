swagger: "2.0"
info:
  version: "0.0.1"
  title: Taxi Api
host: localhost:10010
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  sessionId:
    type: apiKey
    in: header
    name: "X-Session-ID"
security:
  - sessionId: []
paths:
  /signup:
    x-swagger-router-controller: userController
    post:
      tags:
      - User
      description: "Creating new user"
      operationId: signupUser
      security: []
      parameters:
        - name: "user"
          in: body
          description: "User object to be created"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: "User created"
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: userController
    post:
      tags:
      - User
      description: "Logging in with user"
      operationId: loginUser
      security: []
      parameters:
        - name: "credentials"
          in: body
          description: "Check users username and password"
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: "Logged in"
          schema:
            $ref: "#/definitions/Session"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: userController
    get:
      description: "Logging out with current user"
      tags:
      - User
      operationId: logoutUser
      parameters:
      - name: "X-Session-ID"
        in: header
        required: true
        type: "string"
      responses:
        "200":
          description: "Logged out"
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /cards:
    x-swagger-router-controller: cardController
    get:
      description: List users all credit or debit cards
      operationId: getCards
      tags:
      - Card
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Card"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    post:
      tags:
      - Card
      description: "Add new credit or debit card"
      operationId: saveCard
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
        - name: "cardData"
          in: body
          description: "Credit or debit card"
          required: true
          schema:
            $ref: "#/definitions/Card"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Card"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - Card
      description: "Delete card"
      operationId: deleteCard
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
        - name: "cardNumber"
          in: body
          required: true
          description: "Deleting the chosen card"
          schema:
            type: string
      responses:
        "200": 
          description: "Card deleted"
          schema: 
            $ref: "#/definitions/Card"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
      - Card
      description: "Update card"
      operationId: updateCard
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
        - name: "cardNumber"
          description: "Updateable cards number"
          in: header
          required: true
          type: "string"
        - name: "newCardData"
          in: body
          required: true
          description: "Update the chosen card"
          schema:
            $ref: "#/definitions/Card"
      responses:
        "200": 
          description: "Card updated"
          schema: 
            $ref: "#/definitions/Card"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /taxi:
    x-swagger-router-controller: taxiController
    post:
      tags:
      - Taxi
      description: "Order new taxi to the users position"
      operationId: orderTaxi
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
        - name: "toHome"
          in: header
          description: "Order to home or to other place"
          required: true
          type: boolean
        - name: "position"
          in: body
          description: "Users position"
          required: false
          schema:
            $ref: "#/definitions/Position"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /taxi/history:
    x-swagger-router-controller: taxiController
    get:
      tags:
      - Taxi
      description: "Order new taxi to the users position"
      operationId: orderHistory
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/Order"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /taxi/favorite:
    x-swagger-router-controller: taxiController
    put:
      tags:
      - Taxi
      description: "Update users favorite taxi company"
      operationId: updateFavorite
      parameters:
        - name: "X-Session-ID"
          in: header
          required: true
          type: "string"
        - name: "CompanyName"
          in: header
          required: true
          type: "string"
      responses:
        "200":
          description: Success
          schema: 
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  User:
    properties: 
      username:
        type: "string"
        description: "Users chosen name"
        example: "usrnm34"
      firstname:
        type: "string"
        description: "Users given name"
        example: "Elon"
      lastname:
        type: "string"
        description: "Users family name"
        example: "Musk"
      email:
        type: "string"
        description: "Users email adress"
        example: "user@gmail.com"
      password:
        type: "string"
        description: "Users secret password"
        example: "secret"
      phone:
        type: "string"
        description: "Users phone number"
        example: "+36703330000"
      home:
        type: "object"
        description: "Users home adress"
        properties:
          postal:
            type: "number"
            description: "Users postal code"
            example: 6720
          city:
            type: "string"
            description: "Users city"
            example: "Szeged"
          street:
            type: "string"
            description: "Users street"
            example: "Kossuth Lajos sgt"
          number:
            type: "string"
            description: "Users house number"
            example: "67/b"
  Credentials:
    required:
      - "username"
      - "password"
    properties:
      username:
        type: "string"
        example: "usrnm344"
      password:
        type: "string"
        example: "secret"
  Session:
    required:
      - sessionID
    properties:
      sessionID:
        type: "string"
        example: 'htf546f64fd65gh'
      expiresAfter:
        type: "string"
        format: "date-time"
        description: "date when token expires"
  Card:
    properties:
      _id:
        type: string
      name: 
        type: string
        example: "First card"
      number:
        type: string
        example: "113244224467876"
      owner:
        type: string
        example: "User User"
      expires:
        type: string
        example: "11/21"
      security:
        type: number
        example: 236
  Position:
    properties:
      postal:
        type: "number"
        description: "Users postal code"
        example: 6720
      city:
        type: "string"
        description: "Users city"
        example: "Szeged"
      street:
        type: "string"
        description: "Users street"
        example: "Kossuth Lajos sgt"
      number:
        type: "string"
        description: "Users house number"
        example: "67/b"
  Order:
    properties:
      adress:
        type: object
        properties:
          postal:
            type: "number"
            description: "Users postal code"
            example: 6720
          city:
            type: "string"
            description: "Users city"
            example: "Szeged"
          street:
            type: "string"
            description: "Users street"
            example: "Kossuth Lajos sgt"
          number:
            type: "string"
            description: "Users house number"
            example: "67/b"
      date:
        type: string
        description: "Order date"
        example: "2019.08.19."
      company:
        type: object
        description: "Company of the taxi"
        example: "Radio Taxi"
      userId:
        type: number
        description: "Users id"
        example: 11
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: "string"
